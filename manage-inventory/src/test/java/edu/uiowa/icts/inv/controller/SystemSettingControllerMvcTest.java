package edu.uiowa.icts.inv.controller;


import java.util.List;

import org.hamcrest.core.IsNull;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.Arrays;

import edu.uiowa.icts.datatable.DataTableColumn;
import edu.uiowa.icts.datatable.DataTableRequest;
import edu.uiowa.icts.datatable.DataTableSearch;
import edu.uiowa.icts.inv.dao.*;
import edu.uiowa.icts.inv.domain.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThat;
import static org.hamcrest.Matchers.*;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

/**
 * Generated by Protogen
 * @since Fri Oct 16 11:14:56 CDT 2015
 */
public class SystemSettingControllerMvcTest extends AbstractControllerMVCTests {
	
    private SystemSetting firstSystemSetting;
    
    @Before
    public void before() {
              // at the moment, do nothing for ids generated without sequences  
          }

    @Test
    public void addShouldDisplayNewSystemSettingForm() throws Exception {
       mockMvc.perform(get("/systemsetting/add"))
       .andExpect(status().isOk())
       .andExpect(model().attributeExists("systemSetting")) 
       .andExpect(view().name("/inv/systemsetting/edit"));
    }
    
    @Test
    public void listShouldSimplyLoadPage() throws Exception {
       mockMvc.perform(get("/systemsetting/list"))
       .andExpect(status().isOk())
       .andExpect(view().name("/inv/systemsetting/list"));
    }
    
    @Test
    public void indexShouldDisplayListPage() throws Exception {
       mockMvc.perform(get("/systemsetting/"))
       .andExpect(status().isOk())
       .andExpect(view().name("/inv/systemsetting/list"));
    }
    
    @Test
    public void listAltShouldLoadListOfSystemSettings() throws Exception {
       mockMvc.perform(get("/systemsetting/list_alt"))
       .andExpect(status().isOk())
       .andExpect(model().attributeExists("systemSettingList")) 
       .andExpect(view().name("/inv/systemsetting/list_alt"));
    }
    
    
              // at the moment, don't test datatables for ids generated without sequences  
          
    
}