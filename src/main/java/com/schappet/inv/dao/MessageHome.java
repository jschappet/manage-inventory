package com.schappet.inv.dao;

import edu.uiowa.icts.spring.*;
import com.schappet.inv.domain.*;
import java.util.ArrayList;
import java.util.List;
import org.hibernate.Criteria;
import org.hibernate.criterion.Order;
import edu.uiowa.icts.util.SortColumn;
import org.apache.commons.logging.LogFactory;
import org.apache.commons.logging.Log;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;
import org.hibernate.criterion.Restrictions;

/**
 * Generated by Protogen
 * Fri Jun 27 07:27:13 CDT 2014
 */
@Repository("com_schappet_inv_dao_MessageHome")
@Transactional
public class MessageHome extends GenericDao<Message> implements MessageService {

    private static final Log log = LogFactory.getLog(MessageHome.class);

    public MessageHome() {
        setDomainName("com.schappet.inv.domain.Message");
    }

    public Message findById(Integer id) {
        return (Message)this.sessionFactory.getCurrentSession().get(getDomainName(), id);
    }

    @Override
    public Message getCurrentMessage(String messageName) {
        Criteria criteria = this.sessionFactory.getCurrentSession().createCriteria(Message.class);
        criteria.add(Restrictions.eq("messageName", messageName));
        criteria.addOrder(Order.desc("version"));
        criteria.setMaxResults(1);
        return (Message) criteria.uniqueResult();
    }

    @Override
    public Integer getCurrentMessageId(String messageName) {
        Integer id = null;
        Message m = getCurrentMessage(messageName);
        if( m != null ){
            id = m.getMessageId();
        }
        return id;
    }

    @Override
    public String getCurrentMessageText(String messageName) {
        String text = null;
        Message m = getCurrentMessage(messageName);
        if( m != null ){
            text = m.getMessageText();
        }
        return text;
    }
}