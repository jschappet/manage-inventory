package edu.uiowa.icts.inv.domain;

import java.util.Set;
import java.util.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.text.ParseException;
import java.util.Date;
import javax.persistence.*;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Table;
import javax.persistence.Table;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import org.springframework.format.annotation.DateTimeFormat;
import org.hibernate.annotations.*;
import javax.persistence.CascadeType;
import javax.validation.constraints.NotNull;
import com.fasterxml.jackson.annotation.*;
import edu.uiowa.icts.*;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/** 
 * Generated by Protogen - www.icts.uiowa.edu/protogen 
 * @since 10/16/2015 11:14:56 AM CDT
 */
@Entity( name = "edu_uiowa_icts_inv_domain_systemSetting" )
@Table( name = "system_setting", schema = "inv" )
@JsonIgnoreProperties( { "hibernateLazyInitializer", "handler" } )
public class SystemSetting { 

	private static final Log log = LogFactory.getLog( SystemSetting.class );

        private String name;
        private String value;
        private Boolean active;
        private String notes;
        private String lastUpdatedBy;
    @DateTimeFormat( pattern = "yyyy-MM-dd" )
    private Date lastUpdated;


    @Id
    @Column(name = "name", unique = true, nullable = false)
    public String getName(){
        return name;
    }

    public void setName(String name){
        this.name = name;
    }

    @Column(name = "value")
    public String getValue(){
        return value;
    }

    public void setValue(String value){
        this.value = value;
    }

    @Column(name = "active")
    public Boolean getActive(){
        return active;
    }

    public void setActive(Boolean active){
        this.active = active;
    }

    @Column(name = "notes")
    public String getNotes(){
        return notes;
    }

    public void setNotes(String notes){
        this.notes = notes;
    }

    @Column(name = "last_updated_by")
    public String getLastUpdatedBy(){
        return lastUpdatedBy;
    }

    public void setLastUpdatedBy(String lastUpdatedBy){
        this.lastUpdatedBy = lastUpdatedBy;
    }

    @Column(name = "last_updated")
    public Date getLastUpdated(){
        return lastUpdated;
    }

    @JsonSetter
    public void setLastUpdated(Date lastUpdated){
        this.lastUpdated = lastUpdated;
    }

    @JsonIgnore
    public void setLastUpdated( String lastUpdated ){
        try{
            DateFormat formatter = new SimpleDateFormat( "MM/dd/yyyy" );
            formatter.setLenient(true);
            this.lastUpdated = formatter.parse(lastUpdated);
        } catch ( ParseException e ) { 
            log.error( "ParseException setting date for LastUpdated", e );
        }
    }


}
